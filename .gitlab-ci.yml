image: docker:20.10.8
services:
  - docker:20.10.8-dind

variables:
  CONTAINER_TAG_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  CONTAINER_BUILD_IMAGE: $CI_REGISTRY_IMAGE:latest-build
  DEV_PORT: 22
  PROD_PORT: 2202
  SERVER_DEV_IP:   # <<< here gonna be set ip/dns of yours dev server
  SERVER_PROD_IP:  # <<< here gonna be set ip/dns of yours prod server
  SSH_USER:        # <<< here gonna be set username for yours servers


stages:
  - build
  - deploy
  - delpoy to prod
  - rollback

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
    - docker --version
    - docker build --build-arg version=$CI_COMMIT_TAG --build-arg username=$CI_REGISTRY_USER --build-arg password=$CI_REGISTRY_PASSWORD -t $CONTAINER_TAG_IMAGE .
    - docker push $CONTAINER_TAG_IMAGE
  only:
    - tags

deploy to dev:
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -    # <<< ssh private part gonna be save to gitlab variables before run the pipeline
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -p $DEV_PORT $SERVER_DEV_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo -e "TAG_IMAGE=${CI_COMMIT_TAG}" > .env-compose
    - cat .env-compose
    - |+
      if cat ".env-compose" | grep "stable"; then
        echo "MATCH, its stable image"
        cp .env-compose .env-compose-stable
      else
        echo "NOT MATCH, its regular image"
        ls -la
      fi
    - ssh $SSH_USER@$SERVER_DEV_IP -p $DEV_PORT "cd ~/compose && sed -i s/^TAG_IMAGE=.*/TAG_IMAGE=${CI_COMMIT_TAG}/ .env"
    - ssh $SSH_USER@$SERVER_DEV_IP -p $DEV_PORT "cd ~/compose && docker-compose down && docker-compose up -d"
  except:        # <<< not run pipeline in master and develop branches
    - master
    - develop


deploy to prod:
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -    # <<< ssh private part gonna be save to gitlab variables before run the pipeline
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -p $PROD_PORT $SERVER_PROD_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - echo -e "TAG_IMAGE=${CI_COMMIT_TAG}" > .env-compose
    - cat .env-compose
    - |+
      if cat ".env-compose" | grep "stable"; then
        echo "MATCH, its stable image"
        cp .env-compose .env-compose-stable
      else
        echo "NOT MATCH, its regular image"
        ls -la
      fi
    - ssh $SSH_USER@$SERVER_PROD_IP -p $PROD_PORT "cd ~/compose && sed -i s/^TAG_IMAGE=.*/TAG_IMAGE=${CI_COMMIT_TAG}/ .env"
    - ssh $SSH_USER@$SERVER_PROD_IP -p $PROD_PORT "cd ~/compose && docker-compose down && docker-compose up -d"
  except:        # <<< not run pipeline in master and develop branches
    - master
    - develop
